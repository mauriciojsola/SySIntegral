@using SySIntegral.Core.Entities.Devices
@using Microsoft.AspNetCore.Html
@using SySIntegral.Core.Entities.CheckPoints
@model List<SySIntegral.Core.Entities.CheckPoints.CheckPoint>
@{
    ViewData["Title"] = "Puntos de Control";
}

<h1>Puntos de Control</h1>
<hr />
@*<a class="btn btn-primary btn-sm" asp-area="Admin" asp-controller="CheckPoints" asp-action="Create">Crear Punto de Control</a>*@

@foreach (var checkPoint in Model.Where(x => x.CheckPointType == CheckPointType.Aggregator))
{
  <div class="d-flex flex-sm-row-reverse  justify-content-around flex-sm-row flex-column">
        <div class="card p-4 d-inline-block text-center"><i class="bi bi-grid-3x3-gap d-inline-block"></i> <span class="d-inline-block">@checkPoint.Description</span></div>
        @{
            ShowTree2(checkPoint.Children.ToList());
        }
  </div>
}

@if (Model == null || !Model.Any())
{
    <div class="alert alert-warning">No se encontraron puntos de control.</div>
}

@functions {

    private void ShowTree2(List<CheckPoint> menusList)
    {
        if (menusList != null)
        {
            foreach (var item in menusList)
            {
                <div class="card pt-4 pb-4 ml-1 border-0 d-flex justify-content-center text-center">
                    <div class="d-flex justify-content-sm-center w-100"><i class="bi bi-arrow-right d-none d-md-block w-100"></i><i class="bi bi-arrow-up d-md-none w-100"></i></div>
                </div>
                <div class="card p-4 text-center">
                    <div class="d-inline-block">
                        @*<i class="bi bi-arrow-left-right d-inline-block"></i>&nbsp;@item.Description*@
                        @*<i class="bi bi-fullscreen d-inline-block"></i>&nbsp;@item.Description*@
                        @item.Description
                    </div>
                    <div class="text-info small">[ <i class="bi bi-upc-scan d-inline-block"></i>&nbsp;@item.InputDevice.Description ]</div>

                </div>

                @if (item.Children.Any())
                {
                    ShowTree2(item.Children.ToList());
                }
            }
        }
    }

}
